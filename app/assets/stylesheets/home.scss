html, body {
    height: 100%;
    width: 100%;
}

$primary_font : 'Fascinate Inline', cursive;
$second_font : 'Roboto Slab', serif ;


// navbar styling 

.fa-beer:before {
    padding-right: 10px;
}

.navbar-brand {
    font-family: 'Pattaya', sans-serif;
    letter-spacing: 2px;
}

//home page stlying

#home {
    background: url("beer_on_bar.jpeg") no-repeat center center fixed;
    display: table;
    height: 100%;
    position: relative;
    width: 100%;
    background-size: cover;
}

.landing-text {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
    padding-bottom: 3%;
    color: white;
    text-shadow: 2px 2px 2px #3d3d3d;
}


#landing-header-main {
    font-size: 4rem;
    font-family: $primary_font;
    letter-spacing: 3px;
}

.search-input {
    width: 22%;
    border-radius: 5px;
    text-align: center;
    border:none;
    font-size: 1.1rem;
}


// Search Results Styling 

.landing-text-searched {
    display: table-cell;
    text-align: center;
    vertical-align: middle;
    padding-bottom: 3%;
    padding-top:9%;
    color: white;
    
}

// **CONTAINER FOR ALL RESULTS****

.results-container {
    color: black;
}
// ***CONTAINER FOR INDIVIDUAL RESULT***

#home_searched {
    background: url("beer_on_bar.jpeg") no-repeat center center fixed;
    display: table;        height: 30%;
    position: relative;
    width: 100%;        background-size: 100%;
    background-position: 0px,100px;
}


#search-result {
    border: 1px solid rgba(0,0,0,.125);
    border-radius: 3px;
    margin: 10px 22px;
    height: 380px;
    width: 30%;
    float: left;
    color: black;
}

//STYLING FOR BUTTONS *****
#search-results-buttons-container {
    text-align: center;
    position: relative;
}


#search-result a {
    text-decoration: underline !important;
    color: black;
}

#search-result:hover {
    box-shadow: 10px 10px 10px grey;
    transform: scale(1.03)
}

.card {
    margin-bottom: 10px;
    width: 60%;
    margin: 10px auto;
    box-shadow: inset 0 0 7px #000000;
}

.search-links {
    list-style-type: none;
    padding: .5em;
    
}

#search_header {
    font-family: $second_font;
    font-size: 3em;
}

#brewery-name {
    font-family: $second_font;
    padding-top: .5em;
    text-align: center;
}


.brewQueue_home_button {
    background-color : #31B0D5;
    color: white;
    padding: 10px 30px;
    border-radius: 4px;
    border-color: #46b8da;
  }
  
  #bq_button {
    position: fixed;
    bottom: 30px;
    right: 50px;
    // box-shadow: 10px 10px 10px grey;
    button:hover span {display:none}
    button:hover:before {content:"Reply!"}
  }


  //BUTTONS STYLING ON SEARCH RESULTS 
  #home-brewque {
      font-family: $second_font;
      padding-right: 10%;
      color: black;
  }

  #home-more-info a {
      color: white;
      text-decoration: none !important;
  }


  //CHECKBOX STYLING TO ADD TO BREWQUEUE *********

/*
=====
LEVEL 1. CORE STYLES
=====
*/

.toggle{
    --uiToggleSize: var(--toggleSize, 20px);
    --uiToggleIndent: var(--toggleIndent, .4em);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
    --uiToggleColor: var(--toggleColor, #000);
    --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
    --uiToggleBgColor: var(--toggleBgColor, #fff);
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
    --uiToggleArrowColor: var(--toggleArrowColor, #fff);
  
    display: inline-block;
    position: relative;
  }
  
  .toggle__input{
    position: absolute;
    left: -99999px;
  }
  
  .toggle__label{
    display: inline-flex;
    cursor: pointer;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));
  }
  
  .toggle__label:before, .toggle__label:after{
    content: "";
    box-sizing: border-box;  
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);
  
    position: absolute;
    left: 0;
    top: 0;
  }
  
  .toggle__label:before{
    // border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
    // z-index: 2;
    border: red solid black;
    z-index: 2;
  }
  
  .toggle__input:disabled ~ .toggle__label:before{
    border-color: var(--uiToggleDisabledColor);
  }
  
  .toggle__input:focus ~ .toggle__label:before{
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
  }
  
  .toggle__input:not(:disabled):checked:focus ~ .toggle__label:after{
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    background-color: var(--uiToggleColor);
    opacity: 0;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:after{
    opacity: 1;
  }
  
  .toggle__text{
    margin-top: auto;
    margin-bottom: auto;
  }
  
  /*
  The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
  */
  
  .toggle__text:before{
    content: "";
    box-sizing: border-box;
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);
  
    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--uiToggleArrowColor);
  
    position: absolute;
    top: .5428em;
    left: .2em;
    z-index: 3;
  
    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
    width: .5em;
    height: .25em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
    will-change: width, height;
    transition: width .1s ease-out .2s, height .2s ease-out;
  }
  
  /*
  =====
  LEVEL 2. PRESENTATION STYLES
  =====
  */
  
  /* 
  The demo skin
  */
  
  .toggle__label:before, .toggle__label:after{
    border-radius: 2px;
  }
  
  /* 
  The animation of switching states
  */
  
  .toggle__input:not(:disabled) ~ .toggle__label:before,
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    opacity: 1;
    transform-origin: center center;
    will-change: transform;
    transition: transform .2s ease-out;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:before{
    transform: rotateY(0deg);
    transition-delay: .2s;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    transform: rotateY(90deg);
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:before{
    transform: rotateY(-90deg);
    transition-delay: 0s;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:after{
    transform: rotateY(0deg);
    transition-delay: .2s;
  }
  
  .toggle__text:before{
    opacity: 0;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
    opacity: 1;
    transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
  }
  
  /*
  =====
  LEVEL 3. SETTINGS
  =====
  */
  
  .toggle{
    --toggleColor: #690e90;
    --toggleBgColor: #9b59b6;
    --toggleSize: 50px;
  }
  
  

//OURCHECKBOX STYLING

/*
=====
LEVEL 1. CORE STYLES
=====
*/

.toggle{
    --uiToggleSize: var(--toggleSize, 20px);
    --uiToggleIndent: var(--toggleIndent, .4em);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 2px);
    --uiToggleColor: var(--toggleColor, #000);
    --uiToggleDisabledColor: var(--toggleDisabledColor, #868e96);
    --uiToggleBgColor: var(--toggleBgColor, #fff);
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);
    --uiToggleArrowColor: var(--toggleArrowColor, #fff);
  
    display: inline-block;
    position: relative;
  }
  
  .toggle__input{
    position: absolute;
    left: -99999px;
  }
  
  .toggle__label{
    display: inline-flex;
    cursor: pointer;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--uiToggleIndent));
  }
  
  .toggle__label:before, .toggle__label:after{
    content: "";
    box-sizing: border-box;  
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);
  
    position: absolute;
    left: 0;
    top: 0;
  }
  
  .toggle__label:before{
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);
    z-index: 2;
  }
  
  .toggle__input:disabled ~ .toggle__label:before{
    border-color: var(--uiToggleDisabledColor);
  }
  
  .toggle__input:focus ~ .toggle__label:before{
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
  }
  
  .toggle__input:not(:disabled):checked:focus ~ .toggle__label:after{
    box-shadow: 0 0 0 2px var(--uiToggleBgColor), 0 0 0px 4px var(--uiToggleColor);
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    background-color: var(--uiToggleColor);
    opacity: 0;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:after{
    opacity: 1;
  }
  
  .toggle__text{
    margin-top: auto;
    margin-bottom: auto;
  }
  
  /*
  The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle
  */
  
  .toggle__text:before{
    content: "";
    box-sizing: border-box;
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);
  
    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--uiToggleArrowColor);
  
    position: absolute;
    top: .5428em;
    left: .2em;
    z-index: 3;
  
    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
    width: .5em;
    height: .25em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
    will-change: width, height;
    transition: width .1s ease-out .2s, height .2s ease-out;
  }
  
  /*
  =====
  LEVEL 2. PRESENTATION STYLES
  =====
  */
  
  /* 
  The demo skin
  */
  
  .toggle__label:before, .toggle__label:after{
    border-radius: 2px;
  }
  
  /* 
  The animation of switching states
  */
  
  .toggle__input:not(:disabled) ~ .toggle__label:before,
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    opacity: 1;
    transform-origin: center center;
    will-change: transform;
    transition: transform .2s ease-out;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:before{
    transform: rotateY(0deg);
    transition-delay: .2s;
  }
  
  .toggle__input:not(:disabled) ~ .toggle__label:after{
    transform: rotateY(90deg);
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:before{
    transform: rotateY(-90deg);
    transition-delay: 0s;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label:after{
    transform: rotateY(0deg);
    transition-delay: .2s;
  }
  
  .toggle__text:before{
    opacity: 0;
  }
  
  .toggle__input:not(:disabled):checked ~ .toggle__label .toggle__text:before{
    opacity: 1;
    transition: opacity .1s ease-out .3s, width .1s ease-out .5s, height .2s ease-out .3s;
  }
  
  /*
  =====
  LEVEL 3. SETTINGS
  =====
  */
  
  .toggle{
    --toggleColor: #690e90;
    --toggleBgColor: #9b59b6;
    --toggleSize: 50px;
  }
  
  